---
title: "Estadística Descriptiva. Gráficas Variables Cuantitativas."
format: 
  html:
    grid: 
      body-width: 950px
editor: visual
lang: es
---

```{r}
#| code-fold: true
#| warning: false
#| message: false

library(tidyverse)
library(sf)          # Para datos espaciales
library(viridis)     # Para paletas de colores
library(janitor)    # Para limpiar nombres de columnas
library(scales)     # Para mejorar ejes en gráficos

```

# Datos espaciales de Puebla

```{r municipios}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

#municipios_Puebla <- st_read("C:/Users/gamst/OneDrive/Documentos/Puebla", options = "ENCODING=LATIN1", quiet = TRUE)
municipios_Puebla <- st_read("C:/Users/gamst/OneDrive/Documentos/Puebla/Estados/conjunto_de_datos/21mun.shp", options = "ENCODING=LATIN1", quiet = TRUE)

# Crear mapa de municipios de Puebla
mapa_municipios <- ggplot(municipios_Puebla) +
  geom_sf(fill = "paleturquoise1", color = "maroon4", size = 0.3) +
  labs(
    title = "Municipios de Puebla",
    subtitle = paste("Total de municipios:", nrow(municipios_Puebla)),
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10)
  )

print(mapa_municipios)
```

# Fuente de datos: INEGI

Para este ejemplo, utilizaremos los datos del **Instituto Nacional de Estadística y Geografía (INEGI)** de México. Específicamente, los Censos y Conteos de Población y Vivienda disponible en:

**Enlace de descarga**: https://inegi.org.mx/app/descarga/

Buscar: Estado. Seleccionar: Programas \> Censos y Conteos de Población y Vivienda \> 2020 \> Indicadores 1900-2020 y descargar el archivo CSV.

Extraer el archivo `cpv_valor_14.csv` y guardarlo en la carpeta `data/`.

# Lectura de datos

Carguemos los datos de población y vivienda para el año 2020, filtrando por algunos indicadores relevantes:

-   Edad mediana
-   Indice de envejecimiento 
-   Porcentaje de la población con limitación mental
-   Porcentaje de la población con discapacidad por accidente
-   Hogares con jefatura femenina

```{r}
#| code-fold: true
#| warning: false
#| message: false


#datos_total <- read_csv("1_estadistica_descriptiva/data/cpv_valor_14.csv", na = c("ND"))
datos_total <- read_csv("C:/Users/gamst/OneDrive/Documentos/Puebla/cpv_valor_21.csv", na = c("ND"))

datos_total <- datos_total |> filter(año == 2020)
#unique(datos_total$indicador)
datos_seleccion <- datos_total |> 
  filter(indicador %in% c("Edad mediana", "Índice de envejecimiento", "Porcentaje de la población con limitación mental", "Porcentaje de la población con discapacidad por accidente",
  "Hogares con jefatura femenina"), desc_municipio != "Estatal") |> 
  select(desc_municipio, indicador, valor)
```

Cambiamos el formato de los datos para que cada indicador sea una columna separada, facilitando el análisis posterior. Además, limpiamos los nombres de las columnas para que sean más manejables y creamos una columna `NOMGEO` para poder unir los datos espaciales con los datos de población y vivienda.

```{r}
#| code-fold: true
#| warning: false
#| message: false

datos <- datos_seleccion |>
    pivot_wider(names_from = indicador, values_from = valor) 

datos <- datos |> 
  clean_names() 

# Corrección de nombres de municipios

datos <- datos |> 
  mutate(desc_municipio = if_else(desc_municipio == "Puebla", "Puebla", desc_municipio))

datos <- datos |> 
  mutate(NOMGEO = desc_municipio)
```

# Estadísticas descriptivas

Ahora que tenemos nuestros datos preparados, podemos realizar un resumen numérico de las variables cuantitativas. Para ello, utilizaremos la función `summary()` de R, que nos proporcionará un resumen estadístico de cada variable, incluyendo la media, mediana, mínimo, máximo y cuartiles. Hay que agregar las demás medidas de dispersión analizadas en clase (desviación media, varianza, rango, etc.) para cada variable cuantitativa.

```{r}
#| code-fold: true

summary(datos)
```

Se unen los datos geograficos de los municipios de Puebla con los datos de población y vivienda. Esto nos permitirá crear mapas y realizar análisis espaciales. Para preservar la integridad de los datos, utilizamos `left_join()` de `dplyr`, el primer conjunto de datos debe ser el que contenga la columna `geometry`.

```{r}
#| code-fold: true

datos <- left_join(municipios_Puebla, datos)
```

# Edad (Mediana)

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center


ggplot(datos) +
  geom_sf(aes(fill = edad_mediana), color = "black", size = 0.1) +
  scale_fill_viridis_c(
    name = "Edad (mediana)"
  ) +
  labs(
    title = "Edad (mediana) de los Municipios de Puebla",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )

```

A continuación, se presentan diferentes tipos de gráficos para visualizar la distribución de una sola variable cuantitativa, en este caso, la edad mediana de los municipios de Puebla. Estos gráficos son útiles para comprender la distribución y características de la variable. En cada caso, es necesario que incluyas cómo se lleva a cabo cada gráfico y posteriormente, la interpretación de los resultados.

## Histograma

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = edad_mediana)) +
  geom_histogram(aes(edad_mediana), color="black", fill = "mistyrose", boundary=min(datos$edad_mediana, na.rm = TRUE), binwidth = 2) +
  labs(
    title = "Distribución de la Edad",
    x = "Edad (años)", y = "Frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )

```

## Gráfica de densidad
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = edad_mediana)) +
  geom_density(color="red", fill = "lightpink1", alpha=0.6) +
  labs(
    title = "Distribución de la Edad",
    x = "Edad (años)", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )



```

## Boxplot

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = edad_mediana)) +
    geom_boxplot(
    fill = "lightcyan2",           # Color de relleno
    color = "lightskyblue",          # Color del borde más oscuro
    alpha = 0.8,                # Transparencia
    outlier.color = "green3",  # Color rojo para outliers
    outlier.size = 2.5,         # Tamaño de outliers
    outlier.alpha = 0.7,        # Transparencia de outliers
    width = 0.5,                # Ancho del boxplot
    notch = TRUE,               # Muescas para intervalo de confianza
    notchwidth = 0.7            # Ancho de las muescas
  ) +
  geom_jitter(alpha = 0.3, color = "blue", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución de la Edad (mediana)", 
  subtitle = "Población del Estado de Puebla",
  y = "Edad (años)",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "white", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "white", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Gráfico de violín

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = edad_mediana)) +
    geom_violin(fill = "lightpink", color = "lightpink3", alpha = 0.8,
    trim = FALSE,               # No recortar las colas
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "white", color = "mistyrose", alpha = 0.9,
    outlier.color = "orchid", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "white",
  color = "mistyrose3", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "mistyrose4", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución de la Edad (mediana)", 
  subtitle = "Población del Estado de Puebla",
  y = "Edad (años)",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "snow", color = NA)
  )
  
```

## Q-Q Plot (comparación de cuantiles)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center


# Q-Q Plot básico para normalidad
ggplot(na.omit(datos), aes(sample = edad_mediana)) +
    stat_qq(color = "violet", size = 2, alpha = 0.7) +
    stat_qq_line(color = "thistle", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (Edad mediana)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "años")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Edad Mediana - Población Puebla") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "snow", color = NA)
  )
  


```

## Dot Plot (Gráfico de puntos)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(na.omit(datos), aes(x = edad_mediana, y = reorder(NOMGEO, edad_mediana))) +
  geom_point(color = "steelblue", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = edad_mediana, y = NOMGEO, yend = NOMGEO),
    color = "steelblue2", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Edad (años)",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.1))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.01, 0.01))
  ) +
  labs(
    title = "Dot Plot - Edad (mediana) por Municipio",
    subtitle = "Estado de Puebla") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

#Índice de envejecimiento

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center


ggplot(datos) +
  geom_sf(aes(fill = indice_de_envejecimiento), color = "snow", size = 0.1) +
  scale_fill_viridis_c(
    name = "IDE"
  ) +
  labs(
    title = "indice de envejecimiento de Puebla",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )
```


##Histograma
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

  ggplot(na.omit(datos), aes(x = indice_de_envejecimiento)) +
  geom_histogram(aes(indice_de_envejecimiento), color="bisque4", fill = "bisque", boundary=min(datos$indice_de_envejecimiento, na.rm = TRUE), binwidth = 0.3) +
  labs(
    title = "Distribucion de envejecimiento",
    x = "Envejecimiento", y = "frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```


##Boxplot

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = indice_de_envejecimiento)) +
    geom_boxplot(
    fill = "bisque",           # Color de relleno
    color = "bisque4",          # Color del borde más oscuro
    alpha = 0.8,                # Transparencia
    outlier.color = "tomato",  # Color rojo para outliers
    outlier.size = 2.5,         # Tamaño de outliers
    outlier.alpha = 0.7,        # Transparencia de outliers
    width = 0.5,                # Ancho del boxplot
    notch = TRUE,               # Muescas para intervalo de confianza
    notchwidth = 0.7            # Ancho de las muescas
  ) +
  geom_jitter(alpha = 0.3, color = "blue", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "")) +
  labs(title = "Distribución de envejecimiento", 
  subtitle = "Población del Estado de Puebla",
  y = "Cant.Envejecimiento",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Gráfico de violín
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = indice_de_envejecimiento)) +
    geom_violin(fill = "bisque", color = "paleturquoise", alpha = 0.8,
    trim = FALSE,               # No recortar las colas
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "snow", color = "green", alpha = 0.9,
    outlier.color = "purple", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "white",
  color = "pink2", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "bisque4", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "Cant. personas")) +
  labs(title = "Distribución del IDE", 
  subtitle = "Indice  de envejecimiento del Estado de Puebla",
  y = "Indice",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Q-Q Plot (comparación de cuantiles)
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center


# Q-Q Plot básico para normalidad
ggplot(na.omit(datos), aes(sample = indice_de_envejecimiento)) +
    stat_qq(color = "bisque", size = 2, alpha = 0.7) +
    stat_qq_line(color = "bisque4", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (PPLM)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "Cant. personas")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Indice de envejecimiento - Población Puebla") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Dot Plot (Gráfico de puntos)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(na.omit(datos), aes(x = indice_de_envejecimiento, y = reorder(NOMGEO, indice_de_envejecimiento))) +
  geom_point(color = "blue", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = indice_de_envejecimiento, y = NOMGEO, yend = NOMGEO),
    color = "blue4", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Edad (años)",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.1))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.01, 0.01))
  ) +
  labs(
    title = "Dot Plot - Asegurados por Municipio",
    subtitle = "Estado de Puebla") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

#Porcentaje de la población con limitación mental
```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center


ggplot(datos) +
  geom_sf(aes(fill = porcentaje_de_la_poblacion_con_limitacion_mental), color = "snow", size = 0.1) +
  scale_fill_viridis_c(
    name = "PVCE"
  ) +
  labs(
    title = "Porcentaje de la poblacion con limitacion mental de Puebla",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )

```

##Histograma
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

  ggplot(na.omit(datos), aes(x = porcentaje_de_la_poblacion_con_limitacion_mental)) +
  geom_histogram(aes(porcentaje_de_la_poblacion_con_limitacion_mental), color="purple4", fill = "purple", boundary=min(datos$porcentaje_de_la_poblacion_con_limitacion_mental, na.rm = TRUE), binwidth = 0.25) +
  labs(
    title = "Distribución de PVCE",
    x = "limitaciones mentales", y = "Frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )

```

##Grafica de densidad
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = porcentaje_de_la_poblacion_limitacion_mental)) +
  geom_density(aes(porcentaje_de_la_poblacion_con_limitacion_mental), color="palevioletred", fill = "palevioletred4", alpha=0.6) +
  labs(
    title = "Distribución del PVCE",
    x = "Porcentaje", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )


```

## Boxplot
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = porcentaje_de_la_poblacion_con_limitacion_mental)) +
    geom_boxplot(
    fill = "pink",           # Color de relleno
    color = "pink3",          # Color del borde más oscuro
    alpha = 0.8,                # Transparencia
    outlier.color = "pink4",  # Color rojo para outliers
    outlier.size = 2.5,         # Tamaño de outliers
    outlier.alpha = 0.7,        # Transparencia de outliers
    width = 0.5,                # Ancho del boxplot
    notch = TRUE,               # Muescas para intervalo de confianza
    notchwidth = 0.7            # Ancho de las muescas
  ) +
  geom_jitter(alpha = 0.3, color = "tomato", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "Porcentaje")) +
  labs(title = "Distribución del PVCE", 
  subtitle = "Porcentaje de la poblaion con limitacion mental en el Estado de Puebla",
  y = "P ",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

##Gráfico de violín
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = porcentaje_de_la_poblacion_con_limitacion_mental)) +
    geom_violin(fill = "paleturquoise", color = "paleturquoise4", alpha = 0.8,
    trim = FALSE,               # No recortar las colas
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "snow", color = "purple", alpha = 0.9,
    outlier.color = "purple4", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "white",
  color = "pink", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "pink4", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "%")) +
  labs(title = "Distribución del PVCE", 
  subtitle = "Poblacion del Estado de Puebla",
  y = "Promedio",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
  
```

## Q-Q Plot (comparación de cuantiles)
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center


# Q-Q Plot básico para normalidad
ggplot(na.omit(datos), aes(sample = porcentaje_de_la_poblacion_con_limitacion_mental)) +
    stat_qq(color = "magenta", size = 2, alpha = 0.7) +
    stat_qq_line(color = "magenta4", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (PPLM)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "%")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Poblacion con limitacion mental - Población Puebla") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Dot Plot (Gráfico de puntos)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(na.omit(datos), aes(x = edad_mediana, y = reorder(NOMGEO, edad_mediana))) +
  geom_point(color = "purple", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = edad_mediana, y = NOMGEO, yend = NOMGEO),
    color = "purple4", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Edad (años)",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.1))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.01, 0.01))
  ) +
  labs(
    title = "Dot Plot - Edad (mediana) por Municipio",
    subtitle = "Estado de Puebla") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

#Porcentaje de la población con discapacidad por accidente

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center


ggplot(datos) +
  geom_sf(aes(fill = porcentaje_de_la_poblacion_con_discapacidad_por_accidente), color = "snow", size = 0.1) +
  scale_fill_viridis_c(
    name = "Población con discpacidad por accidente"
  ) +
  labs(
    title = "Porcentajes de la población con discapacidad por accidente",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )
```

##Histotograma

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = porcentaje_de_la_poblacion_con_discapacidad_por_accidente)) +
  geom_histogram(aes(porcentaje_de_la_poblacion_con_discapacidad_por_accidente), color="purple", fill = "purple4", boundary=min(datos$porcentaje_de_la_poblacion_con_limitacion_mental, na.rm = TRUE), binwidth = 2) +
  labs(
    title = "Distribución de discapacitados por accidentes",
    x = "discapacidad por accidente", y = "Frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```

## Gráfica de densidad

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = porcentaje_de_la_poblacion_con_discapacidad_por_accidente)) +
  geom_density(aes(porcentaje_de_la_poblacion_con_discapacidad_por_accidente), color="cyan", fill = "cyan4", alpha=0.6) +
  labs(
    title = "Distribución de discapacitados por accidentes",
    x = "Porcentaje", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```

## Boxplot

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = porcentaje_de_la_poblacion_con_discapacidad_por_accidente)) +
    geom_boxplot(
    fill = "blue",           # Color de relleno
    color = "blue4",          # Color del borde más oscuro
    alpha = 0.8,                # Transparencia
    outlier.color = "cyan",  # Color rojo para outliers
    outlier.size = 2.5,         # Tamaño de outliers
    outlier.alpha = 0.7,        # Transparencia de outliers
    width = 0.5,                # Ancho del boxplot
    notch = TRUE,               # Muescas para intervalo de confianza
    notchwidth = 0.7            # Ancho de las muescas
  ) +
  geom_jitter(alpha = 0.3, color = "green", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "porcentaje")) +
  labs(title = "Distribución de discapacitados por accidentes", 
  subtitle = "Población del Estado de Puebla",
  y = "P",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Gráfico de violín

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = porcentaje_de_la_poblacion_con_discapacidad_por_accidente)) +
    geom_violin(fill = "purple", color = "purple4", alpha = 0.8,
    trim = FALSE,               # No recortar las colas
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "snow", color = "cyan", alpha = 0.9,
    outlier.color = "orange", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "snow",
  color = "cyan4", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "cyan3", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "%")) +
  labs(title = "Distribución de los discapacitados por accidentes", 
  subtitle = "Población del Estado de Puebla",
  y = "Promedio",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
  
```

## Q-Q Plot (comparación de cuantiles)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center


# Q-Q Plot básico para normalidad
ggplot(na.omit(datos), aes(sample = porcentaje_de_la_poblacion_con_discapacidad_por_accidente)) +
    stat_qq(color = "blue", size = 2, alpha = 0.7) +
    stat_qq_line(color = "blue4", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (PDA)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "%")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Asegurados - Población Puebla") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
  
```

## Dot Plot (Gráfico de puntos)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(na.omit(datos), aes(x = porcentaje_de_la_poblacion_con_discapacidad_por_accidente, y = reorder(NOMGEO, porcentaje_de_la_poblacion_con_discapacidad_por_accidente))) +
  geom_point(color = "blue", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = porcentaje_de_la_poblacion_con_discapacidad_por_accidente, y = NOMGEO, yend = NOMGEO),
    color = "blue4", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Edad (años)",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.1))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.01, 0.01))
  ) +
  labs(
    title = "Dot Plot - Asegurados por Municipio",
    subtitle = "Estado de Puebla") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

#Hogares con jefatura femenina

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center


ggplot(datos) +
  geom_sf(aes(fill = hogares_con_jefatura_femenina), color = "black", size = 0.1) +
  scale_fill_viridis_c(
    name = "hogares con jefatura femenina"
  ) +
  labs(
    title = "HCJF de los Municipios de Puebla",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )
```


## Histograma

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = hogares_con_jefatura_femenina)) +
  geom_histogram(color = "blue", fill = "purple", binwidth = 5, alpha = 0.7) +
  labs(
    title = "Distribución de Hogares con Jefatura Femenina",
    subtitle = "Por municipio de Puebla",
    x = "Cant.viviendas", 
    y = "Densidad",
    caption = "Fuente: INEGI 2020"
  ) +
  theme_bw() +
  theme(
    plot.title = element_text(size = 15, face = "bold"),
    plot.subtitle = element_text(size = 13),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    axis.title.x = element_text(face = "bold", size = 13),
    axis.title.y = element_text(face = "bold", size = 13)
  )

```

## Gráfica de densidad

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center
ggplot(na.omit(datos), aes(x = hogares_con_jefatura_femenina)) +
  geom_density(aes(hogares_con_jefatura_femenina), color="blue", fill = "cyan", alpha=0.6) +
  labs(
    title = "Distribución de hogares con jefatura femenina",
    x = "Cant.viviendas", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )


```

## Boxplot

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot( na.omit(datos), aes(x = "", y = hogares_con_jefatura_femenina)) +
    geom_boxplot(
    fill = "blue",           # Color de relleno
    color = "cyan",          # Color del borde más oscuro
    alpha = 0.8,                # Transparencia
    outlier.color = "purple",  # Color rojo para outliers
    outlier.size = 2.5,         # Tamaño de outliers
    outlier.alpha = 0.7,        # Transparencia de outliers
    width = 0.5,                # Ancho del boxplot
    notch = TRUE,               # Muescas para intervalo de confianza
    notchwidth = 0.7            # Ancho de las muescas
  ) +
  geom_jitter(alpha = 0.3, color = "purple4", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "viviendas")) +
  labs(title = "Distribución de los hogares con jefatura femenina", 
  subtitle = "Población del Estado de Puebla",
  y = "Cant.viviendas",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "snow", color = NA)
  )
```

## Gráfico de violín

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(na.omit(datos), aes(x = "", y = hogares_con_jefatura_femenina)) +
    geom_violin(fill = "cyan", color = "blue4", alpha = 0.8,
    trim = FALSE,               # No recortar las colas
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "white", color = "purple", alpha = 0.9,
    outlier.color = "yellow", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "snow",
  color = "pink", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "pink4", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "")) +
  labs(title = "Distribución de hogares con jefatura femenina", 
  subtitle = "Población del Estado de Puebla",
  y = "Cant.viviendas",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "snow", color = NA)
  )
  
```

## Q-Q Plot (comparación de cuantiles)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center


# Q-Q Plot básico para normalidad
ggplot(na.omit(datos), aes(sample = hogares_con_jefatura_femenina)) +
    stat_qq(color = "pink", size = 2, alpha = 0.7) +
    stat_qq_line(color = "pink4", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (Hogare con jefatura femenina)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Jefatura femenina - Población Puebla") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
  


```

## Dot Plot (Gráfico de puntos)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(na.omit(datos), aes(x = hogares_con_jefatura_femenina, y = reorder(NOMGEO, hogares_con_jefatura_femenina))) +
  geom_point(color = "cyan", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = hogares_con_jefatura_femenina, y = NOMGEO, yend = NOMGEO),
    color = "blue", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Cant. hogares",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.1))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.01, 0.01))
  ) +
  labs(
    title = "Dot Plot - hogares con jefatura femenina por Municipio",
    subtitle = "Estado de Puebla") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "snow", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "snow", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

